*********************************************************************************
Best Individual: 0
*********************************************************************************
Config Pos: 1
Training error: 11303
Trainig Deviation: 3977.6
Fitness: 6.54426e-05
List Size: 176
List effective Size: 2
-----------------------
Lista de instrucciones: 
-----------------------
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[8] = math.sin(in_t[26])
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[4] = r_all[4] + in_t[34]
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[1] = math.cos(in_t[10])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = r_all[8] + in_t[28]
r_all[1] = in_t[19] + in_t[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[7] = r_all[3] + in_t[10]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[3] = r_all[1] / r_all[14] if r_all[14] != 0 else r_all[1] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[8] = r_all[8] * r_all[16]
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[4] = in_t[18] - in_t[30]
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[8] = r_all[5] / in_t[6] if in_t[6] != 0 else r_all[5] + 1.0
r_all[5] = r_all[5] / r_all[16] if r_all[16] != 0 else r_all[5] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[1] = r_all[1] ** 2
r_all[3] = math.sin(in_t[13])
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[1] = in_t[19] ** 2
r_all[4] = in_t[19] + r_all[2]
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[3] = r_all[3] + in_t[29]
r_all[8] = r_all[8] + in_t[30]
r_all[2] = math.log10(abs(in_t[7])) if in_t[7] != 0 else in_t[3] + 1.0
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[7] = r_all[7] + in_t[24]
r_all[7] = math.cos(r_all[8])
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[7] = math.cos(r_all[8])
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[7] = r_all[5] * r_all[2]
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = in_t[17] ** 2
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[29]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.log10(abs(in_t[3])) if in_t[3] != 0 else in_t[33] + 1.0
r_all[6] = r_all[4] + r_all[10]
r_all[8] = math.log10(abs(in_t[3])) if in_t[3] != 0 else in_t[33] + 1.0
r_all[6] = r_all[4] + r_all[10]
r_all[3] = math.sin(in_t[14])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[5] = in_t[28] - in_t[7]
r_all[1] = math.sin(in_t[5])
r_all[2] = in_t[22] * in_t[26]
r_all[6] = r_all[2] * r_all[5]
r_all[5] = math.cos(in_t[2])
r_all[4] = math.sin(r_all[15])
r_all[7] = r_all[7] - r_all[14]
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[8] = math.log10(abs(r_all[3])) if r_all[3] != 0 else r_all[1] + 1.0
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[4] = math.sin(r_all[15])
r_all[3] = in_t[30] / r_all[13] if r_all[13] != 0 else in_t[30] + 1.0
r_all[4] = math.sin(r_all[15])
r_all[2] = r_all[7] ** 2
r_all[1] = r_all[8] / in_t[24] if in_t[24] != 0 else r_all[8] + 1.0
r_all[4] = math.sin(r_all[15])
r_all[7] = r_all[7] - r_all[14]
r_all[8] = math.log10(abs(r_all[3])) if r_all[3] != 0 else r_all[1] + 1.0
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[1] = r_all[8] / in_t[24] if in_t[24] != 0 else r_all[8] + 1.0
r_all[4] = math.sin(r_all[15])
r_all[8] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[3] + 1.0
r_all[3] = in_t[8] + in_t[14]
r_all[8] = math.sin(r_all[1])
r_all[2] = r_all[7] ** 2
r_all[1] = r_all[8] / in_t[24] if in_t[24] != 0 else r_all[8] + 1.0
r_all[3] = math.sqrt(abs(r_all[1]))
r_all[3] = math.sqrt(abs(in_t[16]))
r_all[2] = r_all[2] - r_all[3]
r_all[3] = in_t[10] - in_t[14]
r_all[2] = r_all[2] / r_all[15] if r_all[15] != 0 else r_all[2] + 1.0
r_all[3] = math.sin(in_t[15])
r_all[2] = r_all[2] - r_all[3]
r_all[8] = math.log10(abs(in_t[5])) if in_t[5] != 0 else r_all[6] + 1.0
r_all[3] = in_t[10] - in_t[14]
r_all[3] = in_t[10] - in_t[14]
r_all[3] = math.sin(in_t[15])
r_all[3] = r_all[8] - in_t[12]
r_all[2] = r_all[2] - r_all[3]
r_all[2] = in_t[0] * in_t[22]
r_all[2] = math.sin(r_all[15])
r_all[3] = math.sin(in_t[15])
r_all[3] = in_t[10] - in_t[14]
r_all[3] = in_t[10] - in_t[14]
r_all[3] = in_t[10] - in_t[14]
r_all[3] = in_t[10] - in_t[14]
r_all[3] = math.sin(in_t[15])
r_all[3] = r_all[8] - in_t[12]
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[2] = math.sin(r_all[15])
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 1
*********************************************************************************
Config Pos: 1
Training error: 2.06671e+08
Trainig Deviation: 3.14331e+08
Fitness: 1.91938e-09
List Size: 175
List effective Size: 14
-----------------------
Lista de instrucciones: 
-----------------------
r_all[8] = math.sin(in_t[26])
r_all[5] = math.sqrt(abs(r_all[14]))
r_all[4] = r_all[8] + in_t[28]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[5] * in_t[22]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[8] * in_t[8]
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[5] * in_t[22]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[3] + r_all[7]
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[3] = r_all[3] + r_all[7]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[8] = r_all[5] / in_t[6] if in_t[6] != 0 else r_all[5] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[6] = math.sin(r_all[3])
r_all[1] = math.cos(in_t[19])
r_all[1] = math.cos(in_t[19])
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[1] = r_all[1] ** 2
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[4] = r_all[5] - in_t[19]
r_all[1] = in_t[19] ** 2
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[3] = r_all[3] * r_all[16]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[2] = math.cos(r_all[17])
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[5] = math.cos(in_t[28])
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = in_t[17] ** 2
r_all[2] = math.sin(in_t[31])
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[2] = math.sin(in_t[10])
r_all[2] = math.sqrt(abs(in_t[12]))
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[5] = math.sqrt(abs(in_t[17]))
r_all[4] = r_all[4] + r_all[2]
r_all[4] = r_all[4] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[4] = r_all[4] + in_t[19]
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.cos(r_all[12])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[1] = r_all[1] + r_all[7]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[7] = r_all[1] - r_all[12]
r_all[7] = r_all[5] - r_all[10]
r_all[1] = in_t[5] ** 2
r_all[6] = math.sin(in_t[2])
r_all[5] = in_t[18] ** 2
r_all[5] = math.sqrt(abs(r_all[2]))
r_all[2] = r_all[7] ** 2
r_all[3] = in_t[34] + in_t[28]
r_all[1] = in_t[16] + in_t[31]
r_all[3] = math.log10(abs(in_t[1])) if in_t[1] != 0 else r_all[1] + 1.0
r_all[2] = r_all[7] ** 2
r_all[5] = in_t[23] / in_t[13] if in_t[13] != 0 else in_t[23] + 1.0
r_all[2] = r_all[2] - r_all[3]
r_all[8] = r_all[3] * in_t[17]
r_all[4] = in_t[15] / in_t[19] if in_t[19] != 0 else in_t[15] + 1.0
r_all[3] = r_all[4] / in_t[30] if in_t[30] != 0 else r_all[4] + 1.0
r_all[4] = math.sqrt(abs(r_all[14]))
r_all[3] = math.cos(in_t[18])
r_all[2] = r_all[2] - r_all[3]
r_all[3] = r_all[4] / in_t[30] if in_t[30] != 0 else r_all[4] + 1.0
r_all[2] = r_all[2] - in_t[2]
r_all[8] = r_all[3] * in_t[17]
r_all[1] = r_all[1] + r_all[7]
r_all[6] = r_all[2] * r_all[5]
r_all[6] = r_all[2] - in_t[24]
r_all[4] = in_t[15] / in_t[19] if in_t[19] != 0 else in_t[15] + 1.0
r_all[3] = r_all[4] / in_t[30] if in_t[30] != 0 else r_all[4] + 1.0
r_all[4] = math.sqrt(abs(r_all[14]))
r_all[3] = math.sqrt(abs(r_all[2]))
r_all[3] = r_all[7] / in_t[23] if in_t[23] != 0 else r_all[7] + 1.0
r_all[5] = math.sqrt(abs(in_t[19]))
r_all[2] = r_all[2] - r_all[3]
r_all[4] = r_all[5] + r_all[3]
r_all[2] = r_all[2] - r_all[3]
r_all[2] = r_all[2] - r_all[5]
r_all[5] = math.sqrt(abs(r_all[9]))
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[5] = math.sqrt(abs(in_t[17]))
r_all[7] = r_all[5] - r_all[10]
r_all[3] = math.log10(abs(in_t[1])) if in_t[1] != 0 else r_all[1] + 1.0
r_all[2] = r_all[7] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[3] = math.cos(in_t[18])
r_all[2] = r_all[2] - r_all[3]
r_all[2] = r_all[2] - in_t[2]
r_all[3] = r_all[7] / in_t[23] if in_t[23] != 0 else r_all[7] + 1.0
r_all[5] = math.sqrt(abs(in_t[19]))
r_all[2] = r_all[2] - r_all[3]
r_all[2] = r_all[2] - r_all[3]
r_all[2] = r_all[2] - r_all[5]
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 2
*********************************************************************************
Config Pos: 1
Training error: 1e+10
Trainig Deviation: 0
Fitness: 1e-10
List Size: 176
List effective Size: 39
-----------------------
Lista de instrucciones: 
-----------------------
r_all[8] = math.sin(in_t[26])
r_all[8] = math.sin(in_t[26])
r_all[5] = math.sqrt(abs(r_all[14]))
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[1] = in_t[19] + in_t[5]
r_all[7] = r_all[2] + r_all[13]
r_all[7] = r_all[3] + in_t[10]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[4] = in_t[28] * in_t[16]
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[4] = in_t[18] - in_t[30]
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[1] = math.cos(in_t[19])
r_all[3] = math.sin(in_t[13])
r_all[1] = math.cos(in_t[19])
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[4] = math.sin(r_all[17])
r_all[4] = r_all[5] - in_t[19]
r_all[1] = in_t[19] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = in_t[19] + r_all[2]
r_all[4] = math.sin(r_all[17])
r_all[8] = in_t[28] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[6] = in_t[32] ** 2
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[4] = r_all[5] - in_t[19]
r_all[1] = in_t[19] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[1] = r_all[7] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[4] = r_all[5] - in_t[19]
r_all[1] = in_t[19] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = in_t[17] ** 2
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[6] = r_all[6] / r_all[16] if r_all[16] != 0 else r_all[6] + 1.0
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[4] = r_all[4] + r_all[12]
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.cos(r_all[12])
r_all[6] = r_all[4] + in_t[25]
r_all[3] = math.sin(in_t[14])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[1] = math.sin(in_t[24])
r_all[7] = r_all[6] * in_t[17]
r_all[1] = r_all[1] + r_all[7]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[7] = r_all[1] + in_t[28]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[7] ** 2
r_all[6] = r_all[2] * r_all[5]
r_all[4] = r_all[4] + r_all[12]
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.cos(r_all[12])
r_all[3] = math.sin(in_t[14])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[6] = in_t[32] ** 2
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[6] = r_all[6] / r_all[16] if r_all[16] != 0 else r_all[6] + 1.0
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[4] = r_all[4] + r_all[12]
r_all[6] = r_all[4] + in_t[25]
r_all[1] = math.sin(in_t[24])
r_all[7] = r_all[6] * in_t[17]
r_all[1] = r_all[1] + r_all[7]
r_all[7] = r_all[1] + in_t[28]
r_all[2] = r_all[7] ** 2
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 3
*********************************************************************************
Config Pos: 1
Training error: 5603.79
Trainig Deviation: 6758.51
Fitness: 8.08911e-05
List Size: 176
List effective Size: 8
-----------------------
Lista de instrucciones: 
-----------------------
r_all[1] = in_t[19] + in_t[5]
r_all[4] = in_t[31] ** 2
r_all[1] = in_t[19] + in_t[5]
r_all[4] = in_t[31] ** 2
r_all[1] = in_t[19] + in_t[5]
r_all[8] = math.sin(in_t[26])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[4] = r_all[4] - r_all[15]
r_all[1] = in_t[19] + in_t[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[7] = r_all[2] + r_all[13]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[7] = r_all[2] + r_all[13]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[5] = math.cos(r_all[8])
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[5] * in_t[22]
r_all[5] = r_all[3] * r_all[1]
r_all[5] = math.cos(r_all[8])
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[6] = math.sin(r_all[3])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[3] = math.sin(in_t[13])
r_all[1] = math.cos(in_t[19])
r_all[4] = r_all[4] / r_all[16] if r_all[16] != 0 else r_all[4] + 1.0
r_all[1] = r_all[1] ** 2
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[8] = math.cos(in_t[7])
r_all[4] = r_all[5] - in_t[19]
r_all[4] = in_t[19] + r_all[2]
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = math.cos(r_all[8])
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[3] = in_t[24] ** 2
r_all[3] = in_t[24] ** 2
r_all[4] = r_all[4] ** 2
r_all[4] = r_all[4] - r_all[12]
r_all[6] = r_all[17] - r_all[4]
r_all[3] = r_all[5] * in_t[20]
r_all[4] = r_all[6] + r_all[3]
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.cos(r_all[12])
r_all[7] = r_all[6] * in_t[17]
r_all[8] = r_all[2] - r_all[3]
r_all[8] = in_t[12] - in_t[29]
r_all[5] = in_t[33] * in_t[27]
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[7] = in_t[13] + r_all[7]
r_all[1] = r_all[8] * in_t[12]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[8] = math.sin(r_all[18])
r_all[1] = r_all[15] ** 2
r_all[7] = r_all[8] - r_all[7]
r_all[5] = math.sqrt(abs(r_all[17]))
r_all[4] = math.cos(r_all[11])
r_all[2] = r_all[7] ** 2
r_all[4] = in_t[26] ** 2
r_all[8] = r_all[6] * in_t[29]
r_all[8] = math.sin(r_all[4])
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[1] = r_all[15] ** 2
r_all[4] = math.cos(in_t[9])
r_all[6] = in_t[2] + in_t[29]
r_all[8] = r_all[6] * in_t[29]
r_all[8] = math.sqrt(abs(in_t[2]))
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[8] = r_all[1] * r_all[17]
r_all[3] = r_all[1] / r_all[12] if r_all[12] != 0 else r_all[1] + 1.0
r_all[8] = math.sqrt(abs(r_all[8]))
r_all[7] = r_all[8] - r_all[7]
r_all[3] = r_all[1] + in_t[34]
r_all[2] = r_all[7] ** 2
r_all[1] = r_all[4] * in_t[21]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[3] = math.log10(abs(in_t[10])) if in_t[10] != 0 else in_t[29] + 1.0
r_all[3] = math.log10(abs(r_all[3])) if r_all[3] != 0 else in_t[21] + 1.0
r_all[2] = math.sin(r_all[15])
r_all[2] = r_all[2] + r_all[18]
r_all[3] = math.cos(in_t[7])
r_all[3] = math.log10(abs(r_all[16])) if r_all[16] != 0 else r_all[4] + 1.0
r_all[3] = math.sqrt(abs(in_t[24]))
r_all[2] = r_all[2] - r_all[3]
r_all[8] = r_all[3] * in_t[17]
r_all[3] = math.cos(in_t[20])
r_all[3] = math.log10(abs(r_all[5])) if r_all[5] != 0 else in_t[1] + 1.0
r_all[8] = r_all[3] * in_t[17]
r_all[8] = math.log10(abs(in_t[12])) if in_t[12] != 0 else r_all[8] + 1.0
r_all[2] = r_all[2] + r_all[18]
r_all[3] = math.cos(in_t[7])
r_all[3] = math.log10(abs(r_all[16])) if r_all[16] != 0 else r_all[4] + 1.0
r_all[3] = math.sqrt(abs(in_t[24]))
r_all[2] = r_all[2] - r_all[3]
r_all[8] = r_all[3] * in_t[17]
r_all[3] = math.cos(in_t[20])
r_all[3] = math.log10(abs(r_all[5])) if r_all[5] != 0 else in_t[1] + 1.0
r_all[8] = r_all[3] * in_t[17]
r_all[8] = math.log10(abs(in_t[12])) if in_t[12] != 0 else r_all[8] + 1.0
r_all[34] = in_t[8] ** 2
r_all[3] = r_all[8] ** 2
r_all[5] = math.cos(in_t[1])
r_all[3] = math.cos(in_t[20])
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[2] = math.sin(r_all[15])
r_all[2] = r_all[2] + r_all[18]
r_all[3] = math.sqrt(abs(in_t[24]))
r_all[2] = r_all[2] - r_all[3]
r_all[2] = r_all[2] + r_all[18]
r_all[3] = math.sqrt(abs(in_t[24]))
r_all[2] = r_all[2] - r_all[3]
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 4
*********************************************************************************
Config Pos: 1
Training error: 2.43382e+08
Trainig Deviation: 1.94889e+08
Fitness: 2.28169e-09
List Size: 508
List effective Size: 1
-----------------------
Lista de instrucciones: 
-----------------------
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[5] = math.sqrt(abs(r_all[12]))
r_all[4] = r_all[4] + in_t[1]
r_all[5] = math.cos(in_t[16])
r_all[6] = r_all[17] - r_all[4]
r_all[4] = math.cos(in_t[4])
r_all[6] = r_all[6] + in_t[13]
r_all[2] = in_t[15] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[1] = math.sin(in_t[27])
r_all[8] = r_all[2] + r_all[1]
r_all[1] = in_t[2] - in_t[6]
r_all[1] = r_all[1] + r_all[7]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[4] = math.cos(in_t[10])
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[5] = math.sqrt(abs(in_t[8]))
r_all[3] = r_all[5] + in_t[8]
r_all[2] = r_all[2] - r_all[3]
r_all[7] = r_all[8] / in_t[31] if in_t[31] != 0 else r_all[8] + 1.0
r_all[3] = math.sqrt(abs(in_t[7]))
r_all[2] = math.log10(abs(r_all[17])) if r_all[17] != 0 else in_t[18] + 1.0
r_all[6] = math.sqrt(abs(in_t[3]))
r_all[6] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[5] + 1.0
r_all[2] = in_t[24] * in_t[12]
r_all[7] = r_all[4] + in_t[0]
r_all[3] = math.cos(r_all[9])
r_all[2] = r_all[1] ** 2
r_all[3] = r_all[7] * in_t[24]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[1] = math.cos(r_all[2])
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[1] = r_all[1] + r_all[7]
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[4] = math.sin(in_t[6])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = math.sin(in_t[6])
r_all[2] = r_all[2] - r_all[3]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[1] = math.cos(r_all[2])
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[4] = math.sin(in_t[6])
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[5] = r_all[3] * r_all[1]
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[4] = r_all[3] ** 2
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[8] = math.cos(in_t[7])
r_all[6] = r_all[6] - r_all[15]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = math.sin(in_t[6])
r_all[2] = r_all[2] - r_all[3]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[2] = r_all[2] - r_all[3]
r_all[1] = math.cos(r_all[2])
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[4] = math.sin(in_t[6])
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = in_t[31] ** 2
r_all[4] = math.sin(in_t[6])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = math.sin(in_t[6])
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[8] = r_all[6] / in_t[30] if in_t[30] != 0 else r_all[6] + 1.0
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[8] = math.cos(in_t[7])
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[4] = r_all[8] * in_t[25]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[2] = r_all[5] + in_t[22]
r_all[8] = in_t[31] * r_all[4]
r_all[2] = in_t[4] + in_t[11]
r_all[8] = r_all[8] + in_t[30]
r_all[8] = r_all[8] + r_all[2]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[2] = math.cos(r_all[8])
r_all[4] = r_all[4] + in_t[34]
r_all[5] = math.sqrt(abs(r_all[12]))
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[8] = r_all[8] + r_all[2]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[5] = math.sqrt(abs(r_all[12]))
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] + in_t[2]
r_all[4] = r_all[4] ** 2
r_all[5] = math.cos(in_t[16])
r_all[6] = r_all[17] - r_all[4]
r_all[4] = math.cos(in_t[4])
r_all[8] = math.cos(r_all[12])
r_all[6] = r_all[6] + in_t[13]
r_all[2] = in_t[15] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[2] = math.cos(in_t[30])
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[3] = r_all[3] - r_all[1]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[1] = r_all[1] + r_all[7]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[4] = in_t[31] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[8] = r_all[1] - in_t[10]
r_all[5] = r_all[3] * r_all[1]
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[4] = r_all[4] + r_all[7]
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[2] = r_all[5] + in_t[22]
r_all[8] = r_all[8] + r_all[2]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[4] = math.sin(in_t[6])
r_all[2] = r_all[2] - r_all[3]
r_all[4] = math.sin(in_t[6])
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[5] = r_all[3] * r_all[1]
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = math.sin(r_all[11])
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[8] = math.cos(in_t[7])
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[4] = r_all[8] * in_t[25]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[2] = r_all[5] + in_t[22]
r_all[8] = in_t[31] * r_all[4]
r_all[8] = math.sin(in_t[14])
r_all[2] = in_t[4] + in_t[11]
r_all[8] = r_all[8] + in_t[30]
r_all[8] = r_all[8] + r_all[2]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[2] = math.cos(r_all[8])
r_all[4] = r_all[4] + in_t[34]
r_all[5] = math.sqrt(abs(r_all[12]))
r_all[4] = r_all[4] + in_t[1]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[8] = r_all[8] + r_all[2]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[5] = math.sqrt(abs(r_all[12]))
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] + in_t[2]
r_all[4] = r_all[4] ** 2
r_all[5] = math.cos(in_t[16])
r_all[6] = r_all[17] - r_all[4]
r_all[4] = math.cos(in_t[4])
r_all[8] = math.cos(r_all[12])
r_all[6] = r_all[6] + in_t[13]
r_all[2] = in_t[15] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[1] = math.sin(in_t[27])
r_all[8] = r_all[2] + r_all[1]
r_all[1] = in_t[2] - in_t[6]
r_all[1] = r_all[1] + r_all[7]
r_all[6] = r_all[6] + r_all[5]
r_all[4] = math.cos(in_t[10])
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[5] = math.sqrt(abs(in_t[8]))
r_all[3] = r_all[5] + in_t[8]
r_all[4] = math.cos(in_t[28])
r_all[2] = r_all[2] - r_all[3]
r_all[7] = r_all[8] / in_t[31] if in_t[31] != 0 else r_all[8] + 1.0
r_all[3] = math.sqrt(abs(in_t[7]))
r_all[2] = math.log10(abs(r_all[17])) if r_all[17] != 0 else in_t[18] + 1.0
r_all[6] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[5] + 1.0
r_all[2] = in_t[24] * in_t[12]
r_all[7] = r_all[4] + in_t[0]
r_all[3] = math.cos(r_all[9])
r_all[1] = r_all[1] + r_all[7]
r_all[2] = r_all[1] ** 2
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[4] = in_t[30] - in_t[6]
r_all[3] = r_all[8] * r_all[3]
r_all[2] = math.log10(abs(r_all[17])) if r_all[17] != 0 else in_t[18] + 1.0
r_all[6] = math.sqrt(abs(in_t[3]))
r_all[2] = math.log10(abs(r_all[17])) if r_all[17] != 0 else in_t[18] + 1.0
r_all[6] = math.sqrt(abs(in_t[3]))
r_all[4] = math.cos(in_t[34])
r_all[6] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[5] + 1.0
r_all[3] = math.cos(r_all[9])
r_all[1] = r_all[1] + r_all[7]
r_all[2] = r_all[1] ** 2
r_all[3] = r_all[3] / in_t[12] if in_t[12] != 0 else r_all[3] + 1.0
r_all[1] = r_all[4] * in_t[21]
r_all[3] = r_all[4] + r_all[1]
r_all[4] = r_all[1] - r_all[13]
r_all[3] = math.log10(abs(r_all[1])) if r_all[1] != 0 else r_all[1] + 1.0
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[2] = r_all[2] - r_all[3]
r_all[3] = r_all[4] + r_all[1]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[4] = in_t[9] - in_t[30]
r_all[2] = r_all[2] - r_all[3]
r_all[2] = in_t[19] - in_t[32]
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[0] = in_t[14] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[0] = in_t[14] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 5
*********************************************************************************
Config Pos: 1
Training error: 190557
Trainig Deviation: 276114
Fitness: 2.14284e-06
List Size: 176
List effective Size: 9
-----------------------
Lista de instrucciones: 
-----------------------
r_all[3] = in_t[7] + in_t[20]
r_all[6] = r_all[3] + in_t[19]
r_all[6] = r_all[3] + in_t[19]
r_all[1] = in_t[30] ** 2
r_all[8] = math.cos(in_t[7])
r_all[4] = r_all[5] - in_t[19]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[3] = in_t[7] + in_t[20]
r_all[8] = math.sin(in_t[26])
r_all[5] = math.sqrt(abs(r_all[14]))
r_all[4] = r_all[8] + in_t[28]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[7] = r_all[2] + r_all[13]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[6] = math.cos(r_all[11])
r_all[8] = r_all[1] - in_t[10]
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[5] = math.cos(in_t[2])
r_all[3] = math.cos(r_all[9])
r_all[8] = r_all[8] / r_all[16] if r_all[16] != 0 else r_all[8] + 1.0
r_all[4] = r_all[4] ** 2
r_all[5] = math.cos(in_t[2])
r_all[3] = math.cos(r_all[9])
r_all[6] = in_t[17] ** 2
r_all[6] = in_t[1] + r_all[6]
r_all[6] = in_t[17] ** 2
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[1] / r_all[14] if r_all[14] != 0 else r_all[1] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[8] = r_all[8] + r_all[15]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[3] = r_all[1] / r_all[14] if r_all[14] != 0 else r_all[1] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = in_t[18] - in_t[30]
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[5] = in_t[33] * in_t[27]
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[3] = math.sin(in_t[13])
r_all[1] = math.cos(in_t[19])
r_all[6] = r_all[4] / in_t[32] if in_t[32] != 0 else r_all[4] + 1.0
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[1] = in_t[19] ** 2
r_all[8] = math.sqrt(abs(in_t[11]))
r_all[4] = math.sin(r_all[17])
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[8] = math.cos(in_t[7])
r_all[4] = r_all[5] - in_t[19]
r_all[1] = in_t[19] ** 2
r_all[4] = math.sin(r_all[17])
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = math.cos(r_all[8])
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[8] = in_t[16] ** 2
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = in_t[17] ** 2
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[24]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[3] = math.sin(in_t[14])
r_all[1] = in_t[24] ** 2
r_all[6] = r_all[1] - r_all[6]
r_all[2] = in_t[29] ** 2
r_all[7] = r_all[6] * in_t[17]
r_all[4] = math.cos(in_t[16])
r_all[8] = math.sin(in_t[32])
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[2] = r_all[8] / in_t[29] if in_t[29] != 0 else r_all[8] + 1.0
r_all[4] = r_all[2] / in_t[22] if in_t[22] != 0 else r_all[2] + 1.0
r_all[5] = r_all[2] - in_t[10]
r_all[7] = r_all[7] - in_t[20]
r_all[4] = math.cos(in_t[11])
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[4] - in_t[31]
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[6] = math.sqrt(abs(in_t[4]))
r_all[2] = r_all[3] - r_all[2]
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[5] = r_all[2] + r_all[13]
r_all[2] = r_all[7] ** 2
r_all[3] = math.sqrt(abs(in_t[14]))
r_all[2] = r_all[2] - r_all[3]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[3] = math.sin(in_t[21])
r_all[1] = r_all[1] + r_all[7]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[3] = r_all[5] + r_all[14]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = math.sqrt(abs(in_t[14]))
r_all[2] = r_all[2] - r_all[3]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[3] = math.sin(in_t[21])
r_all[1] = r_all[1] + r_all[7]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[3] = r_all[5] + r_all[14]
r_all[1] = r_all[1] + r_all[7]
r_all[2] = r_all[5] + in_t[20]
r_all[2] = r_all[2] - r_all[3]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[1] = r_all[1] + r_all[7]
r_all[6] = r_all[2] * r_all[5]
r_all[5] = math.cos(in_t[2])
r_all[3] = math.cos(r_all[9])
r_all[3] = math.cos(r_all[9])
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[4] = math.cos(in_t[11])
r_all[2] = r_all[4] - in_t[31]
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[3] - r_all[2]
r_all[5] = r_all[2] + r_all[13]
r_all[3] = r_all[5] + r_all[14]
r_all[2] = r_all[5] + in_t[20]
r_all[2] = r_all[2] - r_all[3]
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 6
*********************************************************************************
Config Pos: 1
Training error: 1e+10
Trainig Deviation: 7088.81
Fitness: 9.99999e-11
List Size: 176
List effective Size: 56
-----------------------
Lista de instrucciones: 
-----------------------
r_all[6] = math.cos(in_t[9])
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[4] = math.sin(r_all[11])
r_all[5] = in_t[27] * r_all[2]
r_all[4] = in_t[18] - in_t[30]
r_all[4] = in_t[31] ** 2
r_all[7] = r_all[2] + r_all[13]
r_all[7] = r_all[2] + r_all[13]
r_all[8] = math.sin(in_t[26])
r_all[5] = math.sqrt(abs(r_all[14]))
r_all[4] = r_all[8] + in_t[28]
r_all[8] = r_all[4] + r_all[5]
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[7] + 1.0
r_all[1] = in_t[19] + in_t[5]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[1] = math.cos(in_t[10])
r_all[7] = r_all[3] / r_all[6] if r_all[6] != 0 else r_all[3] + 1.0
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = math.sin(r_all[11])
r_all[4] = in_t[18] - in_t[30]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[4] = r_all[3] ** 2
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[3] = r_all[3] + r_all[18]
r_all[3] = r_all[8] * in_t[8]
r_all[8] = r_all[7] * in_t[29]
r_all[5] = math.cos(r_all[8])
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[4] = r_all[4] + r_all[7]
r_all[4] = in_t[18] - in_t[30]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[4] = r_all[3] ** 2
r_all[3] = r_all[8] * in_t[8]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[18]
r_all[3] = r_all[8] * in_t[8]
r_all[5] = math.cos(r_all[8])
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[4] = math.sin(r_all[11])
r_all[5] = in_t[27] * r_all[2]
r_all[4] = in_t[18] - in_t[30]
r_all[1] = math.sin(in_t[14])
r_all[1] = r_all[7] / r_all[12] if r_all[12] != 0 else r_all[7] + 1.0
r_all[8] = r_all[5] / in_t[6] if in_t[6] != 0 else r_all[5] + 1.0
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[1] = r_all[1] ** 2
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[8] = math.cos(in_t[7])
r_all[1] = in_t[19] ** 2
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = math.cos(r_all[8])
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[2] = r_all[4] * r_all[4]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[5] = math.cos(r_all[15])
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = in_t[17] ** 2
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[7] = math.cos(in_t[31])
r_all[5] = math.log10(abs(r_all[14])) if r_all[14] != 0 else r_all[8] + 1.0
r_all[5] = math.sin(in_t[11])
r_all[4] = r_all[4] + in_t[34]
r_all[2] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[5] / in_t[19] if in_t[19] != 0 else r_all[5] + 1.0
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[2] = in_t[33] / in_t[6] if in_t[6] != 0 else in_t[33] + 1.0
r_all[2] = math.sqrt(abs(in_t[6]))
r_all[4] = r_all[4] + r_all[2]
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[5] = r_all[7] * r_all[5]
r_all[7] = math.sin(r_all[2])
r_all[8] = math.cos(r_all[12])
r_all[3] = math.sin(in_t[14])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[4] = r_all[7] - r_all[6]
r_all[7] = r_all[6] * in_t[17]
r_all[7] = r_all[6] * in_t[17]
r_all[2] = r_all[2] - r_all[3]
r_all[3] = math.log10(abs(in_t[15])) if in_t[15] != 0 else r_all[5] + 1.0
r_all[8] = in_t[22] / in_t[14] if in_t[14] != 0 else in_t[22] + 1.0
r_all[5] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[6] = r_all[2] * r_all[5]
r_all[8] = math.log10(abs(r_all[2])) if r_all[2] != 0 else in_t[19] + 1.0
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[7] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[3] = in_t[6] ** 2
r_all[8] = math.sqrt(abs(in_t[31]))
r_all[5] = math.sqrt(abs(in_t[4]))
r_all[8] = math.sin(in_t[14])
r_all[3] = in_t[25] - r_all[8]
r_all[5] = r_all[3] - in_t[32]
r_all[2] = r_all[5] - r_all[2]
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[8] = r_all[7] * in_t[29]
r_all[4] = math.cos(in_t[32])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[4] = r_all[4] + r_all[7]
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[2] + 1.0
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[2] = r_all[4] * r_all[4]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[1]
r_all[4] = r_all[4] ** 2
r_all[2] = math.sqrt(abs(in_t[6]))
r_all[4] = r_all[4] + r_all[2]
r_all[6] = r_all[17] - r_all[4]
r_all[7] = r_all[6] * in_t[17]
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[2] = r_all[7] ** 2
r_all[2] = r_all[2] - r_all[3]
r_all[8] = math.sin(in_t[14])
r_all[3] = in_t[25] - r_all[8]
r_all[5] = r_all[3] - in_t[32]
r_all[2] = r_all[5] - r_all[2]
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
*********************************************************************************
Best Individual: 7
*********************************************************************************
Config Pos: 1
Training error: 10940.5
Trainig Deviation: 3922.18
Fitness: 6.72826e-05
List Size: 176
List effective Size: 2
-----------------------
Lista de instrucciones: 
-----------------------
r_all[5] = math.sqrt(abs(r_all[14]))
r_all[6] = r_all[3] + in_t[19]
r_all[8] = math.sin(in_t[26])
r_all[4] = r_all[8] + in_t[28]
r_all[1] = in_t[19] + in_t[5]
r_all[7] = r_all[3] + in_t[10]
r_all[1] = r_all[4] / in_t[12] if in_t[12] != 0 else r_all[4] + 1.0
r_all[6] = math.cos(r_all[11])
r_all[6] = math.cos(r_all[11])
r_all[3] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[8] = r_all[1] - in_t[10]
r_all[1] = math.cos(in_t[10])
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[3] = r_all[5] * in_t[22]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.sin(r_all[18])
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[8] = r_all[2] * r_all[8]
r_all[6] = math.sin(r_all[18])
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[1] / r_all[14] if r_all[14] != 0 else r_all[1] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[7] = math.sin(r_all[7])
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[4] = in_t[18] - in_t[30]
r_all[1] = math.sin(in_t[14])
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[3] = math.sin(in_t[13])
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[1] = in_t[19] ** 2
r_all[4] = in_t[19] + r_all[2]
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[2] = math.log10(abs(in_t[7])) if in_t[7] != 0 else in_t[3] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[7] = r_all[7] + in_t[24]
r_all[4] = math.log10(abs(in_t[11])) if in_t[11] != 0 else r_all[1] + 1.0
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[2] = r_all[4] ** 2
r_all[2] = r_all[4] ** 2
r_all[7] = r_all[7] + in_t[24]
r_all[3] = r_all[1] * r_all[1]
r_all[3] = r_all[3] + r_all[7]
r_all[5] = r_all[7] / in_t[2] if in_t[2] != 0 else r_all[7] + 1.0
r_all[7] = r_all[5] * r_all[2]
r_all[3] = r_all[3] + r_all[18]
r_all[1] = math.cos(r_all[2])
r_all[3] = r_all[3] - r_all[1]
r_all[6] = r_all[6] + in_t[2]
r_all[1] = in_t[15] ** 2
r_all[3] = r_all[3] + r_all[5]
r_all[1] = r_all[6] * in_t[32]
r_all[7] = in_t[19] + r_all[16]
r_all[1] = r_all[1] + r_all[7]
r_all[3] = r_all[3] + in_t[29]
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] + in_t[34]
r_all[4] = r_all[4] ** 2
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[6] = r_all[17] - r_all[4]
r_all[8] = math.cos(r_all[12])
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[7] = r_all[6] * in_t[17]
r_all[1] = math.sin(in_t[5])
r_all[2] = in_t[22] * in_t[26]
r_all[6] = r_all[2] * r_all[5]
r_all[1] = in_t[7] / r_all[2] if r_all[2] != 0 else in_t[7] + 1.0
r_all[5] = math.cos(in_t[2])
r_all[1] = in_t[5] - in_t[29]
r_all[2] = r_all[2] + in_t[19]
r_all[6] = r_all[16] ** 2
r_all[3] = math.log10(abs(r_all[11])) if r_all[11] != 0 else r_all[4] + 1.0
r_all[8] = math.cos(r_all[14])
r_all[8] = r_all[6] + in_t[20]
r_all[2] = in_t[0] ** 2
r_all[6] = r_all[11] ** 2
r_all[8] = math.cos(r_all[7])
r_all[1] = r_all[1] + r_all[7]
r_all[6] = math.sin(r_all[18])
r_all[1] = math.sqrt(abs(r_all[4]))
r_all[4] = in_t[2] / in_t[5] if in_t[5] != 0 else in_t[2] + 1.0
r_all[5] = r_all[3] * r_all[1]
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[3] = r_all[1] / r_all[14] if r_all[14] != 0 else r_all[1] + 1.0
r_all[3] = r_all[5] * in_t[22]
r_all[4] = math.cos(in_t[32])
r_all[2] = math.cos(in_t[30])
r_all[3] = r_all[4] / in_t[17] if in_t[17] != 0 else r_all[4] + 1.0
r_all[4] = r_all[3] ** 2
r_all[7] = r_all[4] / in_t[3] if in_t[3] != 0 else r_all[4] + 1.0
r_all[3] = in_t[13] / in_t[10] if in_t[10] != 0 else in_t[13] + 1.0
r_all[6] = in_t[11] / in_t[26] if in_t[26] != 0 else in_t[11] + 1.0
r_all[6] = math.log10(abs(in_t[32])) if in_t[32] != 0 else r_all[6] + 1.0
r_all[4] = r_all[8] / in_t[13] if in_t[13] != 0 else r_all[8] + 1.0
r_all[3] = r_all[8] * in_t[8]
r_all[7] = math.sin(r_all[7])
r_all[4] = r_all[4] + r_all[7]
r_all[1] = math.sin(r_all[17])
r_all[5] = math.sqrt(abs(r_all[6]))
r_all[2] = math.log10(abs(r_all[4])) if r_all[4] != 0 else r_all[8] + 1.0
r_all[5] = in_t[27] * r_all[2]
r_all[5] = in_t[25] * in_t[3]
r_all[4] = in_t[18] - in_t[30]
r_all[1] = math.sin(in_t[14])
r_all[1] = in_t[17] / in_t[13] if in_t[13] != 0 else in_t[17] + 1.0
r_all[4] = r_all[5] - in_t[0]
r_all[4] = math.cos(r_all[4])
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[1] = math.cos(in_t[19])
r_all[3] = in_t[9] / r_all[12] if r_all[12] != 0 else in_t[9] + 1.0
r_all[3] = math.sin(in_t[13])
r_all[6] = in_t[2] / r_all[4] if r_all[4] != 0 else in_t[2] + 1.0
r_all[1] = in_t[19] ** 2
r_all[4] = in_t[19] + r_all[2]
r_all[7] = r_all[6] / r_all[14] if r_all[14] != 0 else r_all[6] + 1.0
r_all[2] = math.log10(abs(r_all[8])) if r_all[8] != 0 else r_all[1] + 1.0
r_all[1] = in_t[30] ** 2
r_all[2] = math.log10(abs(in_t[7])) if in_t[7] != 0 else in_t[3] + 1.0
r_all[8] = in_t[28] ** 2
r_all[1] = r_all[7] ** 2
r_all[7] = r_all[1] / in_t[20] if in_t[20] != 0 else r_all[1] + 1.0
r_all[8] = in_t[33] * in_t[27]
r_all[8] = r_all[8] + in_t[30]
r_all[6] = r_all[1] ** 2
r_all[6] = r_all[6] + r_all[8]
r_all[6] = in_t[1] + r_all[6]
r_all[6] = r_all[6] + in_t[24]
r_all[4] = r_all[3] ** 2
r_all[4] = r_all[6] + r_all[4]
r_all[4] = r_all[4] + in_t[34]
r_all[1] = math.sqrt(abs(in_t[28]))
r_all[0] = r_all[2] ** 2
------------------------
Instrucciones efectivas: 
------------------------
r_all[2] = math.log10(abs(in_t[7])) if in_t[7] != 0 else in_t[3] + 1.0
r_all[0] = r_all[2] ** 2
-----------
Registros: 
-----------
r_all[0] = 1
r_all[1] = 1
r_all[2] = 1
r_all[3] = 1
r_all[4] = 1
r_all[5] = 1
r_all[6] = 1
r_all[7] = 1
r_all[8] = 1
r_all[9] = 0.444425
r_all[10] = 0.121542
r_all[11] = 0.381183
r_all[12] = 0.92334
r_all[13] = 0.240261
r_all[14] = 0.7377
r_all[15] = 0
r_all[16] = 1
r_all[17] = 2.71828
r_all[18] = 3.14159
